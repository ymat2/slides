[
  {
    "objectID": "local/test.html#マークダウン記法のテスト用",
    "href": "local/test.html#マークダウン記法のテスト用",
    "title": "Test slides",
    "section": "マークダウン記法のテスト用",
    "text": "マークダウン記法のテスト用\n\nマークダウン記法の見え方はこんな感じ\n\n太字\n斜体+太字\n斜体\n打ち消し\n\n引用\n\n\nここは引用\n\n\nインラインコードはprint()こんな感じ。\nリンク: Google\n\n\n\n\n左揃え\n中央揃え\n右揃え\n\n\n\n\n1\n2\n3\n\n\n4\n5\n6\n\n\n\n\n用語\n\n説明文１~~~~~\n\n\n説明文２~~~~~\n\n\n\nタスク1\nタスク2"
  },
  {
    "objectID": "local/test.html#code-r",
    "href": "local/test.html#code-r",
    "title": "Test slides",
    "section": "Code: R",
    "text": "Code: R\n\nggplot(mpg) +\n  aes(x=displ, y=cty, color=drv) +\n  geom_point() +\n  scale_color_viridis_d() +\n  theme_classic(base_size=18)"
  },
  {
    "objectID": "local/test.html#code-python",
    "href": "local/test.html#code-python",
    "title": "Test slides",
    "section": "Code: Python",
    "text": "Code: Python\n\nlst = [2, 6, 9]\n\ndef square(i):\n  return i * i\n\nlst2 = [square(i) for i in lst]\n\nfor j in lst2:\n  print(\"version: \" + str(j))\n\nversion: 4\nversion: 36\nversion: 81"
  },
  {
    "objectID": "local/test.html#multiple-columns",
    "href": "local/test.html#multiple-columns",
    "title": "Test slides",
    "section": "Multiple columns",
    "text": "Multiple columns\n\n\nこっちは4割幅\n\nhoge\nfuga\npiyo\n\n\nこっちは6割幅\n\nほげ\nふが\nぴよ"
  },
  {
    "objectID": "tech-circle/tech-circle-vol2.html#遺伝研スパコンで外部の解析ソフトウェアを使う方法",
    "href": "tech-circle/tech-circle-vol2.html#遺伝研スパコンで外部の解析ソフトウェアを使う方法",
    "title": "遺伝研スパコンで外部パッケージを使う",
    "section": "遺伝研スパコンで外部の解析ソフトウェアを使う方法",
    "text": "遺伝研スパコンで外部の解析ソフトウェアを使う方法\npaml, vcftools, blastなどを解析で使いたい。\n\n遺伝研スパコンでこれらの解析ソフトウェアを使うには:\n\nユーザーのhome/下にインストールして$PATHを通す。(めんどい。最終手段。)\nBioContainers Apptainer (Singularity) Imagesを使う。(手軽。)\n用意されているパッケージ管理ツールを使ってインストールする。(上手く使えば便利。)\n\nGuixの使い方を紹介\nSpackってのも使えるらしい"
  },
  {
    "objectID": "tech-circle/tech-circle-vol2.html#ユーザーのhome下にインストールしてpathを通す",
    "href": "tech-circle/tech-circle-vol2.html#ユーザーのhome下にインストールしてpathを通す",
    "title": "遺伝研スパコンで外部パッケージを使う",
    "section": "ユーザーのhome/下にインストールして$PATHを通す",
    "text": "ユーザーのhome/下にインストールして$PATHを通す\n例えばorthofinderを使いたいとき:\nmkdir ~/bin/  # パッケージを入れる用のディレクトリを準備\ncd bin\n\nwget https://github.com/davidemms/OrthoFinder/releases/download/2.5.4/OrthoFinder.tar.gz  # ソフトウェアをダウンロード\ntar xzf OrthoFinder.tar.gz  # 解凍\n./OrthoFinder/orthofinder -h  # テスト\nここまでできたら~/.bashrcに$PATHを通す\n\n\n.bashrc\n\nexport PATH=$PATH:${HOME}/bin/OrthoFinder/\n\n かなりめんどくさい。できればやりたくない。"
  },
  {
    "objectID": "tech-circle/tech-circle-vol2.html#biocontainers-apptainer-singularity-imagesを使う",
    "href": "tech-circle/tech-circle-vol2.html#biocontainers-apptainer-singularity-imagesを使う",
    "title": "遺伝研スパコンで外部パッケージを使う",
    "section": "BioContainers Apptainer (Singularity) Imagesを使う",
    "text": "BioContainers Apptainer (Singularity) Imagesを使う\nバイオインフォでよく使われる解析ソフトウェアが用意されている。\nls /usr/local/biotools/   # ツールの頭文字ごとに各ディレクトリにある\n 例えばorthofinderを使いたいとき:\nls /usr/local/biotools/o/orthofinder*   # 使えるバージョンを探す\n# ...\n# /usr/local/biotools/o/orthofinder:2.4.1--1  /usr/local/biotools/o/orthofinder:2.5.2--hdfd78af_1\n# /usr/local/biotools/o/orthofinder:2.5.1--0  /usr/local/biotools/o/orthofinder:2.5.3--hdfd78af_0\n# /usr/local/biotools/o/orthofinder:2.5.2--0  /usr/local/biotools/o/orthofinder:2.5.4--hdfd78af_0\nバージョンのパスを指定してコマンドを実行:\nmodule load singularity  # Apptainerを使えるようにする。\nsingularity exec /usr/local/biotools/o/orthofinder:2.5.2--0 orthofinder -f sample/"
  },
  {
    "objectID": "tech-circle/tech-circle-vol2.html#パッケージ管理ツールを使ってインストールする",
    "href": "tech-circle/tech-circle-vol2.html#パッケージ管理ツールを使ってインストールする",
    "title": "遺伝研スパコンで外部パッケージを使う",
    "section": "パッケージ管理ツールを使ってインストールする",
    "text": "パッケージ管理ツールを使ってインストールする\n\nパッケージ管理ツール?\n\napt, homebrewのように、ソフトウェアのインストール、バージョン管理を行えるツール。PATHも通るのでインストールしたらすぐ使える。\n\n遺伝研でもいくつかのパッケージ管理ツールが利用可能"
  },
  {
    "objectID": "tech-circle/tech-circle-vol2.html#デフォルトユーザー権限で使えるguix",
    "href": "tech-circle/tech-circle-vol2.html#デフォルトユーザー権限で使えるguix",
    "title": "遺伝研スパコンで外部パッケージを使う",
    "section": "デフォルト、ユーザー権限で使えるGuix",
    "text": "デフォルト、ユーザー権限で使えるGuix\n遺伝研が書いてる使い方ページ: https://sc.ddbj.nig.ac.jp/software/guix\n前準備:\n\n\n.bashrc\n\nexport GUIX_DAEMON_SOCKET=guix://at111\nexport GUIX_PROFILE=\"$HOME/.guix-profile\"\nsource \"$GUIX_PROFILE/etc/profile\"\n\nパッケージ検索:\nguix serach paml\nインストール:\nguix install paml\n デフォルトのインストールパスは~/.guix_profile/bin/"
  },
  {
    "objectID": "tech-circle/tech-circle-vol2.html#まとめ",
    "href": "tech-circle/tech-circle-vol2.html#まとめ",
    "title": "遺伝研スパコンで外部パッケージを使う",
    "section": "まとめ",
    "text": "まとめ\n外部の解析ソフトウェアを遺伝研で使いたいとき:\n\nApptainer Imagesにあるかどうか探す。\n↓\nGuixで探してインストールする。\n↓\nそれでもなければ公式から落としてきてパスを通す。"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#smallでfriendlyなテキストエディタ-nano",
    "href": "tech-circle/tech-circle-vol1.html#smallでfriendlyなテキストエディタ-nano",
    "title": "GNU nanoエディタを便利に使う",
    "section": "smallでfriendlyなテキストエディタ nano",
    "text": "smallでfriendlyなテキストエディタ nano\nGNUnanoはMacにもLinuxにも元から入っているテキストエディタ。ただしmacOS 12.3 Monterey以降、Macでnanoを打って起動するのはpicoなので、新しいのをhomebrewで入れる。\n\n公式ドキュメント: nano-editor.org/dist/latest/nano.html\nこちらもよろしくお願いします: ymat2.github.io/commandline/nano/\n\n\n新しいバージョンを入れて使うのもよい:\n## Macならhomebrewでインストール\nbrew install nano\n\n## Linux(Ubuntu)ならaptでインストール\nsudo apt install nano"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#基本的な使い方",
    "href": "tech-circle/tech-circle-vol1.html#基本的な使い方",
    "title": "GNU nanoエディタを便利に使う",
    "section": "基本的な使い方",
    "text": "基本的な使い方\nファイル名を指定して開く。ファイルが存在しない場合は新しく作られる。\nnano sample.md\n\nControlX\n\n編集画面から出る。内容を変更している場合は上書きするかどうか聞かれる。\n\nControlO\n\n編集内容を反映。上書き保存のイメージ。\n\nControlK\n\n選択範囲を切り取る。範囲を選択していない場合カーソルのある行が切り取られる。\n\nControlU\n\n切り取った内容をカーソル位置に張り付ける。"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#nanoを便利に使う1-configuration",
    "href": "tech-circle/tech-circle-vol1.html#nanoを便利に使う1-configuration",
    "title": "GNU nanoエディタを便利に使う",
    "section": "nanoを便利に使う1: Configuration",
    "text": "nanoを便利に使う1: Configuration\n~/.bash_profileみたいに、nanoも設定をファイルに書いておくことができる。\n読み込まれる順番は、以下の通り。\n\n/etc/nanorc # システムのデフォルト\n~/.nanorc # これが一番楽\n~/.config/nano/nanorc # 遺伝研のnanoは古すぎてこれは読んでくれない\n\n\nホームに.nanorcを作ってみる:\ncd  # homeディレクトリに移動\nnano .nanorc  # .nanorcをnanoで編集"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#nanoを便利に使う1-configuration-1",
    "href": "tech-circle/tech-circle-vol1.html#nanoを便利に使う1-configuration-1",
    "title": "GNU nanoエディタを便利に使う",
    "section": "nanoを便利に使う1: Configuration",
    "text": "nanoを便利に使う1: Configuration\nset &lt;option&gt;という書き方で設定をどんどん追加していく。\nよく使う & 便利そうな設定を抜粋:\n\n\n.nanorc\n\nset tabsize 4     # Tabでインデントするときの幅をspace4個分に。\nset autoindent    # 改行時にインデントを揃える\nset smooth        # スクロールがスムーズに\nset linenumbers   # 行番号を表示する\nset mouse         # カーソル移動や範囲選択でマウスを使えるように\n\nその他のオプションは公式ドキュメントを参照。"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#nanoを便利に使う2-シンタクスハイライト",
    "href": "tech-circle/tech-circle-vol1.html#nanoを便利に使う2-シンタクスハイライト",
    "title": "GNU nanoエディタを便利に使う",
    "section": "nanoを便利に使う2: シンタクスハイライト",
    "text": "nanoを便利に使う2: シンタクスハイライト\n\nシンタクスハイライトとは\n\n関数、文字列、予約語とかに色をつけてコードを見やすくするあれ。\n\n\n\n\n\n(/etc/nanorcの設定にもよるが、)Macのデフォルトのnanoはハイライトされていない…\nそれも.nanorcで設定できます!!"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#nanoを便利に使う2-シンタクスハイライト-1",
    "href": "tech-circle/tech-circle-vol1.html#nanoを便利に使う2-シンタクスハイライト-1",
    "title": "GNU nanoエディタを便利に使う",
    "section": "nanoを便利に使う2: シンタクスハイライト",
    "text": "nanoを便利に使う2: シンタクスハイライト\n\nハイライト定義ファイルが置かれている場所を探す。\n\nMac(homebrew): /usr/local/share/nano/ / /usr/local/Cellar/nano/%v/share/nano/\nLinux: /usr/share/nano/\n\n.nanorcに以下を追記:\n\n\n.nanorc\n\ninclude \"/usr/share/nano/*.nanorc\"\n\n適当なスクリプトをnanoで開いて、ハイライトされているか見てみる。"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#みなさんのおすすめエディタも教えてください",
    "href": "tech-circle/tech-circle-vol1.html#みなさんのおすすめエディタも教えてください",
    "title": "GNU nanoエディタを便利に使う",
    "section": "みなさんのおすすめエディタも教えてください!!",
    "text": "みなさんのおすすめエディタも教えてください!!\n\n私はnanoの設定こうしています！\nvimの方がはるかに高機能だというのを教えてあげよう\n何言ってんの、時代はvscodeでしょ\n\n個人的にvscodeを食わず嫌いしているのでぜひ誰かにやってほしい…\n\netc.\n\n\n\n技術輪読会のネタについて\n皆さんの意向をお聞きした上で、希望者が多ければgitを学ぶ回をやりたい。"
  },
  {
    "objectID": "tech-circle/tech-circle-vol1.html#補遺-遺伝研でnanoを使うとき",
    "href": "tech-circle/tech-circle-vol1.html#補遺-遺伝研でnanoを使うとき",
    "title": "GNU nanoエディタを便利に使う",
    "section": "補遺: 遺伝研でnanoを使うとき",
    "text": "補遺: 遺伝研でnanoを使うとき\n遺伝研のデフォルトのnanoは、version 2.3.1とかなり古い。(2023-05-09)\n\nキーバインドが結構違う。(ControlXとか基本的なやつは同じ。)\n~/.config/nano/nanorcを読んでくれない。\n.nanorcのワイルドカード*が効かない。\n\n\nデフォルトのnanoを使う場合、\n\n設定ファイルは~/.nanorc\n\n\nキーバインドは自分で設定したり、野生のやつを借りたり。\n\n\nシンタックスハイライトは1つ1つ直接指定: include \"usr/share/nano/python.nanorc\"\n\nおすすめは新しいnanoを入れること\n\nguixならversion 5.6.1が入る。(これもそこそこ古いけど。)\n\n\n*.nanorcもついてくる。(~/.guix-profile/share/nano/*.nanorc)\n\n\n公式から最新版(version 7.2)を落としてきてもいいかも。"
  },
  {
    "objectID": "git-circle/git-circle-vol1.html#目次",
    "href": "git-circle/git-circle-vol1.html#目次",
    "title": "Git 入門①",
    "section": "目次",
    "text": "目次\n\n新しいリポジトリを作る\n手元の変更をローカルリポジトリに反映させる: push\nローカルリポジトリの変更を手元に反映させる: pull\nあえて競合を起こしてそれを解決する\n\n\n参考\n\nhttps://heavywatal.github.io/lectures/git2019makino.html\n\n\nhttps://ymat2.github.io/commandline/git/"
  },
  {
    "objectID": "git-circle/git-circle-vol1.html#新しいリポジトリを作る",
    "href": "git-circle/git-circle-vol1.html#新しいリポジトリを作る",
    "title": "Git 入門①",
    "section": "新しいリポジトリを作る",
    "text": "新しいリポジトリを作る\n\ngithubのページ右上の”+“から”New repository”を選択\n“Repository name”を決めて Create repojitory 。他の部分はそのままでOK。(あとで変更できる。)"
  },
  {
    "objectID": "git-circle/git-circle-vol1.html#新しいリポジトリを作る-1",
    "href": "git-circle/git-circle-vol1.html#新しいリポジトリを作る-1",
    "title": "Git 入門①",
    "section": "新しいリポジトリを作る",
    "text": "新しいリポジトリを作る\n\ngithubのページ右上の”+“から”New repository”を選択\n“Repository name”を決めて Create repojitory 。他の部分はそのままでOK。(あとで変更できる。)"
  },
  {
    "objectID": "git-circle/git-circle-vol1.html#新しいリポジトリを作る-2",
    "href": "git-circle/git-circle-vol1.html#新しいリポジトリを作る-2",
    "title": "Git 入門①",
    "section": "新しいリポジトリを作る",
    "text": "新しいリポジトリを作る\ngithub上で新しいリポジトリを作ると、その後の手順を教えてくれるので基本的にそれに従う。\n\n手元にもリポジトリを作る。\n\nmkdir practice && cd practice  # 手元に同名リポジトリを作って移動\necho \"# practice\" &gt;&gt; README.md  # 新しいファイル(README.md)を作成\n\n\nローカルリポジトリへの操作\n\ngit init  # ローカルリポジトリを作成\n# git status and/or git log\ngit add README.md  # README.mdの変更をインデックスに登録\n# git status and/or git log\ngit commit -m \"first commit\"  # ローカルリポジトリにコミット\n# git status and/or git log"
  },
  {
    "objectID": "git-circle/git-circle-vol1.html#手元の変更をローカルリポジトリに反映させる-push",
    "href": "git-circle/git-circle-vol1.html#手元の変更をローカルリポジトリに反映させる-push",
    "title": "Git 入門①",
    "section": "手元の変更をローカルリポジトリに反映させる: push",
    "text": "手元の変更をローカルリポジトリに反映させる: push\n\nもうひとつ別のファイルを作ってローカルリポジトリに commit\n\necho \"Hello, Git\" &gt;&gt; sample.txt\ngit add sample.txt\ngit commit -m \"Create sample.txt\"\n適宜 git status や git log で確認\n\n\nリモートリポジトリを紐づけて push\n\ngit branch -M main  # ブランチを明示的にmainと命名\ngit remote -v\ngit remote add origin https://github.com/ymat2/practice.git  # リモートリポジトリをoriginと命名して紐づける\ngit remote -v\ngit push -u origin main  # アップストリームブランチをoriginに設定して変更をpush\ngithubの方でREADME.mdが見えるかどうか確認する。"
  }
]